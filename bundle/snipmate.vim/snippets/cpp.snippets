# std::map
snippet fori
	for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {
		${4}
	}
snippet cpp 
	#include <iostream>
	#include <string>
	#include <vector>
snippet stl
	#include <list>
	#include <map>
	#include <set>
	#include <algorithms>
snippet uss
	using namespace std;
snippet us
	using namespace ${1};${2}
snippet swapcpp
	void swap(int &a, int &b){
		int temp = a;
		a = b;
		b = temp;
	}
snippet forit
	for(vector<${1:string}>::iterator it = ${2:vec}.begin(); it != $2.end(); ++it){
		${3:cout << *it << endl;}	
	}${4}
snippet forauto
	for(auto &item: ${1:vec}){
		${2}	
	}
snippet class
	class ${1:SYMBOL}{
		public:
			$1();
			virtual ~$1();
		private:
			${2}
	};
snippet Person
	class Person{
		public:
			Person()
				:id_(-1), name_(""), age_(0){
			};
			Person(int id, const string &name, int age)
				:id_(id), name_(name), age_(age){
			}
			void print(){
				cout << "id=" id_ << " name=" << name_ << " age=" << age_ <<endl;	
			}
		private:
			int id_;
			string name_;
			int age_;
	};
